parameters:
  - name: backendServiceConnection
    type: string
  - name: environmentServiceConnection
    type: string
  - name: resourceGroupName
    type: string
    default: false
  - name: storageAccountName
    type: string
    default: false
  - name: containerName
    type: string
    default: false
  - name: stateFileName
    type: string
    default: false
  - name: workingDirectory
    type: string
    default: false
  - name: command
    type: string
    default: false
  - name: environmentVars
    type: object
    default: null
  - name: gitsshknownhosts
    type: string
    default: false
  - name: terraformgitsshpub
    type: string
    default: false

steps:
  - task: InstallSSHKey@0
    displayName: "Install SSH key"
    inputs:
      knownHostsEntry: ${{ parameters.gitsshknownhosts }} #Variable pulled in from Variable Group
      sshPublicKey: ${{ parameters.terraformgitsshpub }} #Variable pulled in from Variable Group
      sshKeySecureFile: "devops"
      addEntryToConfig: true
      configHostAlias: "ssh.dev.azure.com"
      configHostname: "ssh.dev.azure.com"
  - task: TerraformInstaller@1
    displayName: Install Terraform 1.9.5
    inputs:
      terraformVersion: 1.9.5
  - task: TerraformTaskV4@4
    displayName: "Terraform: init"
    inputs:
      provider: "azurerm"
      command: "init"
      workingDirectory: ${{ parameters.workingDirectory }}
      backendServiceArm: ${{ parameters.backendServiceConnection }}
      backendAzureRmResourceGroupName: ${{ parameters.resourceGroupName }}
      backendAzureRmStorageAccountName: ${{ parameters.storageAccountName }}
      backendAzureRmContainerName: ${{ parameters.containerName }}
      backendAzureRmKey: ${{ parameters.stateFileName }}
    env: ${{ parameters.environmentVars }}
  - task: TerraformTaskV4@4
    displayName: "Terraform: ${{ parameters.command }}"
    inputs:
      provider: "azurerm"
      command: ${{ parameters.command }}
      workingDirectory: ${{ parameters.workingDirectory }}
      environmentServiceNameAzureRM: ${{ parameters.environmentServiceConnection }}
    env: ${{ parameters.environmentVars }}
